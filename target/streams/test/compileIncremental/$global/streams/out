[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreListString source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreListString: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreListString.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreDouble source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreDouble: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreDouble.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreArrayInt source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreArrayInt: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreArrayInt.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreInt source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreInt: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreInt.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.Core source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.Core: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.Core.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreString source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreString: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreString.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreArrayDouble source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreArrayDouble: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreArrayDouble.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreVector source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	CoreDoubleGetterSetter, notify, CoreListStringGetterSetter, setArrayDouble, CoreLogic, wait, CoreArrayInt, setListString$default$2, getArrayString, $asInstanceOf, getListString, StringValues, StringKeys, getArrayDouble, getVector$default$2, CoreString, equals, CoreListString, DoubleKeys, setString, getString$default$2, asInstanceOf, setListString, getDouble, getInt$default$2, getString, CoreArrayString, synchronized, $isInstanceOf, ArrayValues, hasKeyStringArray, CoreArrayDoubleGetterSetter, getArrayString$default$2, CoreInt, stringBinarySearchArray, CoreVectorGetterSetter, notifyAll, setInt, isInstanceOf, IntValues, setArrayString, getListString$default$2, <init>, CoreArrayDouble, getArrayDouble$default$2, CoreArrayStringGetterSetter, ==, CoreLogicOperations, CoreVector, clone, VectorKeys, ListValues, getInt, setVector, getDouble$default$2, CoreDouble, DoubleValues, IntKeys, toString, !=, CoreArrayIntGetterSetter, getClass, setArrayInt, getVector, ne, setVector$default$2, ArrayKeys, CoreStringGetterSetter, eq, Core, CoreGetterSetter, VectorValues, CoreIntGetterSetter, ##, finalize, hashCode, getArrayInt$default$2, ListKeys, setDouble, getArrayInt.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreVector: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreVector.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(setArrayDouble, CoreLogic, CoreArrayInt, getArrayString, getListString, getArrayDouble, CoreString, CoreListString, setString, setListString, getDouble, getString, CoreArrayString, hasKeyStringArray, CoreInt, stringBinarySearchArray, setInt, isInstanceOf, setArrayString, <init>, CoreArrayDouble, CoreVector, getInt, setVector, CoreDouble, setArrayInt, getVector, Core, setDouble, getArrayInt)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreArrayString source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreArrayString: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreArrayString.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] The scaldb.CoreLogic$ source file has the following regular definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] Files invalidated by inheriting from (external) scaldb.CoreLogic$: Set(); now invalidating by inheritance (internally).[0m
[0m[[0mdebug[0m] [0m[naha] Getting direct dependencies of all sources transitively invalidated by inheritance.[0m
[0m[[0mdebug[0m] [0m[naha] Getting sources that directly depend on (external) scaldb.CoreLogic$.[0m
[0m[[0mdebug[0m] [0m[naha] The following modified names cause invalidation of /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala: Set(isInstanceOf, <init>, CoreVector, setVector, getVector)[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Initial source changes: [0m
[0m[[0mdebug[0m] [0m[naha] 	removed:Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	added: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	modified: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated products: Set()[0m
[0m[[0mdebug[0m] [0m[naha] External API changes: API Changes: Set(NamesChange(scaldb.CoreListString,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreDouble,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreArrayInt,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreInt,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.Core,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreString,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreArrayDouble,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreVector,ModifiedNames(regularNames = CoreDoubleGetterSetter, notify, CoreListStringGetterSetter, setArrayDouble, CoreLogic, wait, CoreArrayInt, setListString$default$2, getArrayString, $asInstanceOf, getListString, StringValues, StringKeys, getArrayDouble, getVector$default$2, CoreString, equals, CoreListString, DoubleKeys, setString, getString$default$2, asInstanceOf, setListString, getDouble, getInt$default$2, getString, CoreArrayString, synchronized, $isInstanceOf, ArrayValues, hasKeyStringArray, CoreArrayDoubleGetterSetter, getArrayString$default$2, CoreInt, stringBinarySearchArray, CoreVectorGetterSetter, notifyAll, setInt, isInstanceOf, IntValues, setArrayString, getListString$default$2, <init>, CoreArrayDouble, getArrayDouble$default$2, CoreArrayStringGetterSetter, ==, CoreLogicOperations, CoreVector, clone, VectorKeys, ListValues, getInt, setVector, getDouble$default$2, CoreDouble, DoubleValues, IntKeys, toString, !=, CoreArrayIntGetterSetter, getClass, setArrayInt, getVector, ne, setVector$default$2, ArrayKeys, CoreStringGetterSetter, eq, Core, CoreGetterSetter, VectorValues, CoreIntGetterSetter, ##, finalize, hashCode, getArrayInt$default$2, ListKeys, setDouble, getArrayInt, implicitNames = )), NamesChange(scaldb.CoreArrayString,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )), NamesChange(scaldb.CoreLogic$,ModifiedNames(regularNames = notify, wait, $asInstanceOf, getVector$default$2, equals, getVectorString, asInstanceOf, synchronized, $isInstanceOf, setVectorString$default$2, getVectorString$default$2, notifyAll, isInstanceOf, setVectorString, <init>, ==, CoreVector, clone, VectorKeys, setVector, toString, !=, getClass, CoreVectorString, getVector, ne, setVector$default$2, eq, VectorValues, ##, finalize, hashCode, implicitNames = )))[0m
[0m[[0mdebug[0m] [0m[naha] Modified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial directly invalidated sources: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] [0m
[0m[[0mdebug[0m] [0m[naha] Sources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m[naha] 	product: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m[naha] 	external source: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Recompiling all 1 sources: invalidated sources (1) exceeded 50.0% of all sources[0m
[0m[[0minfo[0m] [0mCompiling 1 Scala source to /home/kaique/war/scaldb/target/scala-2.12/test-classes...[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.13:component from component compiler for Scala 2.12.1[0m
[0m[[0mdebug[0m] [0mGetting org.scala-sbt:compiler-interface:0.13.13:component from component compiler for Scala 2.12.1[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 31533f3f, interfacing (CompilerInterface) with Scala compiler version 2.12.1[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes:/home/kaique/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/home/kaique/war/scaldb/target/scala-2.12/test-classes:/home/kaique/war/scaldb/target/scala-2.12/classes:/home/kaique/.ivy2/cache/io.reactivex/rxscala_2.12/jars/rxscala_2.12-0.26.5.jar:/home/kaique/.ivy2/cache/io.reactivex/rxjava/jars/rxjava-1.2.4.jar:/home/kaique/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar:/home/kaique/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar:/home/kaique/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.12.1.jar:/home/kaique/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.5.jar:/home/kaique/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0mdebug[0m] [0mScala compilation took 10.19300042 s[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Invalidating (transitively) by inheritance from /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala...[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] Invalidated by transitive inheritance dependency: Set(/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala)[0m
[0m[[0mdebug[0m] [0m[naha] The /home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala source file has the following implicit definitions changed:[0m
[0m[[0mdebug[0m] [0m[naha] 	convertToStringShouldWrapperForVerb, convertToStringCanWrapper, convertToAnyShouldWrapper, convertNumericToPlusOrMinusWrapper, convertToEqualizer, convertToInAndIgnoreMethodsAfterTaggedAs, shorthandSharedTestRegistrationFunction, convertToRegexWrapper, unconstrainedEquality, convertToStringMustWrapperForVerb, convertToInAndIgnoreMethods, convertToStringShouldWrapper, convertSymbolToHavePropertyMatcherGenerator, shorthandTestRegistrationFunction.[0m
[0m[[0mdebug[0m] [0m[naha] All member reference dependencies will be considered within this context.[0m
[0m[[0mdebug[0m] [0m[naha] New invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] Initial set of included nodes: Set()[0m
[0m[[0mdebug[0m] [0m[naha] Previously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0mdebug[0m] [0m[naha] 	Set()[0m
[0m[[0mdebug[0m] [0m[naha] All newly invalidated sources after taking into account (previously) recompiled sources:Set()[0m
