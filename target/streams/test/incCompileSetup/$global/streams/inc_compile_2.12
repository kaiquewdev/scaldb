format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/kaique/war/scaldb/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
4 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreArraySpec.class
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreIntSpec.class
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreListSpec.class
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreStringSpec.class
binary dependencies:
4 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /home/kaique/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
4 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreArray
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreInt
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreList
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreString
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
4 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreArraySpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreIntSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreListSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb.CoreStringSpec
used names:
70 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> <byname>
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> <init>
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> <repeated>
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> A
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Any
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> AnyShouldWrapper
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Array
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Assertion
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Boolean
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Class
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> ClassTag
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreArray
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreArraySpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreInt
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreIntSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreList
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreListSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreString
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> CoreStringSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Equality
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> FlatSpec
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> InAndIgnoreMethods
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Int
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> List
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Matchers
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Nothing
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Position
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Predef
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Prettifier
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> ResultOfStringPassedToVerb
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> String
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> StringShouldWrapper
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> StringVerbStringInvocation
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> T
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> Unit
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> _$7
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> apply
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> collection
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> convertToAnyShouldWrapper
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> convertToInAndIgnoreMethods
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> convertToStringShouldWrapper
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> coreArray
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> coreInt
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> coreList
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> coreString
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> default
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> getArray
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> getInt
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> getList
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> getString
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> here
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> immutable
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> in
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> isInstanceOf
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> materializeClassTag
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> org
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> package
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> reflect
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scala
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scalactic
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scalatest
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> scaldb
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> setArray
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> setInt
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> setList
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> setString
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> shorthandTestRegistrationFunction
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> should
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> shouldEqual
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> source
product stamps:
4 items
/home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreArraySpec.class -> lastModified(1491403936000)
/home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreIntSpec.class -> lastModified(1491403936000)
/home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreListSpec.class -> lastModified(1491403936000)
/home/kaique/war/scaldb/target/scala-2.12/test-classes/scaldb/CoreStringSpec.class -> lastModified(1491403936000)
source stamps:
1 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> hash(af673ada5e27f0c4c49081598cd7602a5835ad9b)
binary stamps:
4 items
/home/kaique/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/home/kaique/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/home/kaique/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> lastModified(1488985924000)
class names:
4 items
/home/kaique/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Int
/home/kaique/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Prettifier
/home/kaique/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.FlatSpec
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> java.lang.String
internal apis:
1 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> 

external apis:
4 items
scaldb.CoreArray -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwWd0q6QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAwc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwk2VSkHQABm5vdGlmeXNxAH4ADCSJo+d0AAdzZXRMaXN0c3EAfgAMQXiIpnQABHdhaXRzcQB+AAzcmltWdAANJGFzSW5zdGFuY2VPZnNxAH4ADNhv/Up0AAxTdHJpbmdWYWx1ZXNzcQB+AAy3P/FQdAAKU3RyaW5nS2V5c3NxAH4ADAQj/mV0AApDb3JlU3RyaW5nc3EAfgAMBZOSW3QABmVxdWFsc3NxAH4ADDBB0tR0AAlzZXRTdHJpbmdzcQB+AAyqS+YVdAATZ2V0U3RyaW5nJGRlZmF1bHQkMnNxAH4ADH/o1dp0AAxhc0luc3RhbmNlT2ZzcQB+AAzbmFypdAAQZ2V0SW50JGRlZmF1bHQkMnNxAH4ADKGegpV0AAlnZXRTdHJpbmdzcQB+AAxcuCDxdAAMc3luY2hyb25pemVkc3EAfgAMvZbtV3QAEmdldEFycmF5JGRlZmF1bHQkMnNxAH4ADJ2z1Bl0AAhzZXRBcnJheXNxAH4ADMhWWqV0AA0kaXNJbnN0YW5jZU9mc3EAfgAMD++Nf3QAC0FycmF5VmFsdWVzc3EAfgAMgiiJtnQAB0NvcmVJbnRzcQB+AAwcmzxwdAAJbm90aWZ5QWxsc3EAfgAMFNNGsnQABnNldEludHNxAH4ADL6yS2N0AAxpc0luc3RhbmNlT2ZzcQB+AAxhMWYjdAAJSW50VmFsdWVzc3EAfgAMueYDU3QACENvcmVMaXN0c3EAfgAMl8RL1HQACGdldEFycmF5c3EAfgAMolBri3QABjxpbml0PnNxAH4ADEOAr5B0AAI9PXNxAH4ADMHUQ0J0AAVjbG9uZXNxAH4ADAICVtJ0AApMaXN0VmFsdWVzc3EAfgAM1OP0TXQACUNvcmVBcnJheXNxAH4ADA8uByd0AAZnZXRJbnRzcQB+AAzyziKgdAAHZ2V0TGlzdHNxAH4ADITuK3Z0ABRDb3JlTGlzdEdldHRlclNldHRlcnNxAH4ADKYHp9N0AAdJbnRLZXlzc3EAfgAM8lgf4HQACHRvU3RyaW5nc3EAfgAMmvtipnQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ADO0C5R90ABFnZXRMaXN0JGRlZmF1bHQkMnNxAH4ADLSnCTF0AAIhPXNxAH4ADFCUcl50AAhnZXRDbGFzc3NxAH4ADC/Updh0AAJuZXNxAH4ADLO3IoN0AAlBcnJheUtleXNzcQB+AAztvl1DdAAWQ29yZVN0cmluZ0dldHRlclNldHRlcnNxAH4ADEgGd8x0AAJlcXNxAH4ADFsiqdB0ABNDb3JlSW50R2V0dGVyU2V0dGVyc3EAfgAM2EeqqXQAAiMjc3EAfgAMAT7763QACGZpbmFsaXplc3EAfgAMoZEDXnQACGhhc2hDb2Rlc3EAfgAM4yMZmnQACExpc3RLZXlzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Ad3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAXQAHXNjYWxkYi5Db3JlU3RyaW5nR2V0dGVyU2V0dGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AI9zcgAT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fgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAATQ29yZUludEdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAQc2NhbGRiLkNvcmVBcnJheXVxAH4AhwAAAABxAH4BDnVxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAA3NxAH4AoHQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAPc2NhbGRiLkNvcmVMaXN0dXEAfgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAAUQ29yZUxpc3RHZXR0ZXJTZXR0ZXJzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAGc2NhbGRicQB+ALNzcQB+AKBxAH4Ao3NxAH4ApHNxAH4Ap3VxAH4AqgAAAANzcQB+AKxxAH4Ar3NxAH4ArHEAfgCxcQB+ALNzcQB+AKBxAH4AtXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKxxAH4AunEAfgCzdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2NhbGRic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbPpnxiXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADEvaG9tZS9rYWlxdWUvd2FyL3NjYWxkYi90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU9JRQtOYokTAYxIvTvsFJtBi8zy0=
scaldb.CoreInt -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwWd0q6QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAwc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwk2VSkHQABm5vdGlmeXNxAH4ADCSJo+d0AAdzZXRMaXN0c3EAfgAMQXiIpnQABHdhaXRzcQB+AAzcmltWdAANJGFzSW5zdGFuY2VPZnNxAH4ADNhv/Up0AAxTdHJpbmdWYWx1ZXNzcQB+AAy3P/FQdAAKU3RyaW5nS2V5c3NxAH4ADAQj/mV0AApDb3JlU3RyaW5nc3EAfgAMBZOSW3QABmVxdWFsc3NxAH4ADDBB0tR0AAlzZXRTdHJpbmdzcQB+AAyqS+YVdAATZ2V0U3RyaW5nJGRlZmF1bHQkMnNxAH4ADH/o1dp0AAxhc0luc3RhbmNlT2ZzcQB+AAzbmFypdAAQZ2V0SW50JGRlZmF1bHQkMnNxAH4ADKGegpV0AAlnZXRTdHJpbmdzcQB+AAxcuCDxdAAMc3luY2hyb25pemVkc3EAfgAMvZbtV3QAEmdldEFycmF5JGRlZmF1bHQkMnNxAH4ADJ2z1Bl0AAhzZXRBcnJheXNxAH4ADMhWWqV0AA0kaXNJbnN0YW5jZU9mc3EAfgAMD++Nf3QAC0FycmF5VmFsdWVzc3EAfgAMgiiJtnQAB0NvcmVJbnRzcQB+AAwcmzxwdAAJbm90aWZ5QWxsc3EAfgAMFNNGsnQABnNldEludHNxAH4ADL6yS2N0AAxpc0luc3RhbmNlT2ZzcQB+AAxhMWYjdAAJSW50VmFsdWVzc3EAfgAMueYDU3QACENvcmVMaXN0c3EAfgAMl8RL1HQACGdldEFycmF5c3EAfgAMolBri3QABjxpbml0PnNxAH4ADEOAr5B0AAI9PXNxAH4ADMHUQ0J0AAVjbG9uZXNxAH4ADAICVtJ0AApMaXN0VmFsdWVzc3EAfgAM1OP0TXQACUNvcmVBcnJheXNxAH4ADA8uByd0AAZnZXRJbnRzcQB+AAzyziKgdAAHZ2V0TGlzdHNxAH4ADITuK3Z0ABRDb3JlTGlzdEdldHRlclNldHRlcnNxAH4ADKYHp9N0AAdJbnRLZXlzc3EAfgAM8lgf4HQACHRvU3RyaW5nc3EAfgAMmvtipnQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ADO0C5R90ABFnZXRMaXN0JGRlZmF1bHQkMnNxAH4ADLSnCTF0AAIhPXNxAH4ADFCUcl50AAhnZXRDbGFzc3NxAH4ADC/Updh0AAJuZXNxAH4ADLO3IoN0AAlBcnJheUtleXNzcQB+AAztvl1DdAAWQ29yZVN0cmluZ0dldHRlclNldHRlcnNxAH4ADEgGd8x0AAJlcXNxAH4ADFsiqdB0ABNDb3JlSW50R2V0dGVyU2V0dGVyc3EAfgAM2EeqqXQAAiMjc3EAfgAMAT7763QACGZpbmFsaXplc3EAfgAMoZEDXnQACGhhc2hDb2Rlc3EAfgAM4yMZmnQACExpc3RLZXlzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Ad3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAXQAHXNjYWxkYi5Db3JlU3RyaW5nR2V0dGVyU2V0dGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AI9zcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4Ad0wACWluaGVyaXRlZHEAfgB3TAAHcGFyZW50c3EAfgB3eHEAfgCUc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAAnNyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AJN0AAZPYmplY3RzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AJNzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAANzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABGphdmFzcQB+AKx0AARsYW5nc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AK1zcQB+AKB0AANBbnlzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAFc2NhbGFxAH4As3NxAH4AdHEAfgCBdXEAfgCCAAAAAHNxAH4AhAF0ABpzY2FsZGIuQ29yZUludEdldHRlclNldHRlcnVxAH4AhwAAAABxAH4Ai3VxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAAnNxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQBdAAcc2NhbGRiLkNvcmVBcnJheUdldHRlclNldHRlcnVxAH4AhwAAAABxAH4Ai3VxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAAnNxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQBdAAbc2NhbGRiLkNvcmVMaXN0R2V0dGVyU2V0dGVydXEAfgCHAAAAAHEAfgCLdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAACc3EAfgCgcQB+AKNzcQB+AKRzcQB+AKd1cQB+AKoAAAADc3EAfgCscQB+AK9zcQB+AKxxAH4AsXEAfgCzc3EAfgCgcQB+ALVzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCscQB+ALpxAH4As3NxAH4AdHEAfgCBdXEAfgCCAAAAAHNxAH4AhAB0ABFzY2FsZGIuQ29yZVN0cmluZ3VxAH4AhwAAAAB+cQB+AIl0AAhDbGFzc0RlZnVxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAA3NxAH4AoHQAFkNvcmVTdHJpbmdHZXR0ZXJTZXR0ZXJzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAGc2NhbGRicQB+ALNzcQB+AKBxAH4Ao3NxAH4ApHNxAH4Ap3VxAH4AqgAAAANzcQB+AKxxAH4Ar3NxAH4ArHEAfgCxcQB+ALNzcQB+AKBxAH4AtXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKxxAH4AunEAfgCzc3EAfgB0cQB+AIF1cQB+AIIAAAAAc3EAfgCEAHQADnNjYWxkYi5Db3JlSW50dXEAfgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAATQ29yZUludEdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAQc2NhbGRiLkNvcmVBcnJheXVxAH4AhwAAAABxAH4BDnVxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAA3NxAH4AoHQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAPc2NhbGRiLkNvcmVMaXN0dXEAfgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAAUQ29yZUxpc3RHZXR0ZXJTZXR0ZXJzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAGc2NhbGRicQB+ALNzcQB+AKBxAH4Ao3NxAH4ApHNxAH4Ap3VxAH4AqgAAAANzcQB+AKxxAH4Ar3NxAH4ArHEAfgCxcQB+ALNzcQB+AKBxAH4AtXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKxxAH4AunEAfgCzdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2NhbGRic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbPpnxiXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADEvaG9tZS9rYWlxdWUvd2FyL3NjYWxkYi90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU9JRQtOYokTAYxIvTvsFJtBi8zy0=
scaldb.CoreList -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwWd0q6QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAwc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwk2VSkHQABm5vdGlmeXNxAH4ADCSJo+d0AAdzZXRMaXN0c3EAfgAMQXiIpnQABHdhaXRzcQB+AAzcmltWdAANJGFzSW5zdGFuY2VPZnNxAH4ADNhv/Up0AAxTdHJpbmdWYWx1ZXNzcQB+AAy3P/FQdAAKU3RyaW5nS2V5c3NxAH4ADAQj/mV0AApDb3JlU3RyaW5nc3EAfgAMBZOSW3QABmVxdWFsc3NxAH4ADDBB0tR0AAlzZXRTdHJpbmdzcQB+AAyqS+YVdAATZ2V0U3RyaW5nJGRlZmF1bHQkMnNxAH4ADH/o1dp0AAxhc0luc3RhbmNlT2ZzcQB+AAzbmFypdAAQZ2V0SW50JGRlZmF1bHQkMnNxAH4ADKGegpV0AAlnZXRTdHJpbmdzcQB+AAxcuCDxdAAMc3luY2hyb25pemVkc3EAfgAMvZbtV3QAEmdldEFycmF5JGRlZmF1bHQkMnNxAH4ADJ2z1Bl0AAhzZXRBcnJheXNxAH4ADMhWWqV0AA0kaXNJbnN0YW5jZU9mc3EAfgAMD++Nf3QAC0FycmF5VmFsdWVzc3EAfgAMgiiJtnQAB0NvcmVJbnRzcQB+AAwcmzxwdAAJbm90aWZ5QWxsc3EAfgAMFNNGsnQABnNldEludHNxAH4ADL6yS2N0AAxpc0luc3RhbmNlT2ZzcQB+AAxhMWYjdAAJSW50VmFsdWVzc3EAfgAMueYDU3QACENvcmVMaXN0c3EAfgAMl8RL1HQACGdldEFycmF5c3EAfgAMolBri3QABjxpbml0PnNxAH4ADEOAr5B0AAI9PXNxAH4ADMHUQ0J0AAVjbG9uZXNxAH4ADAICVtJ0AApMaXN0VmFsdWVzc3EAfgAM1OP0TXQACUNvcmVBcnJheXNxAH4ADA8uByd0AAZnZXRJbnRzcQB+AAzyziKgdAAHZ2V0TGlzdHNxAH4ADITuK3Z0ABRDb3JlTGlzdEdldHRlclNldHRlcnNxAH4ADKYHp9N0AAdJbnRLZXlzc3EAfgAM8lgf4HQACHRvU3RyaW5nc3EAfgAMmvtipnQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ADO0C5R90ABFnZXRMaXN0JGRlZmF1bHQkMnNxAH4ADLSnCTF0AAIhPXNxAH4ADFCUcl50AAhnZXRDbGFzc3NxAH4ADC/Updh0AAJuZXNxAH4ADLO3IoN0AAlBcnJheUtleXNzcQB+AAztvl1DdAAWQ29yZVN0cmluZ0dldHRlclNldHRlcnNxAH4ADEgGd8x0AAJlcXNxAH4ADFsiqdB0ABNDb3JlSW50R2V0dGVyU2V0dGVyc3EAfgAM2EeqqXQAAiMjc3EAfgAMAT7763QACGZpbmFsaXplc3EAfgAMoZEDXnQACGhhc2hDb2Rlc3EAfgAM4yMZmnQACExpc3RLZXlzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Ad3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAXQAHXNjYWxkYi5Db3JlU3RyaW5nR2V0dGVyU2V0dGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AI9zcgAT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fgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAATQ29yZUludEdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAQc2NhbGRiLkNvcmVBcnJheXVxAH4AhwAAAABxAH4BDnVxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAA3NxAH4AoHQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAPc2NhbGRiLkNvcmVMaXN0dXEAfgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAAUQ29yZUxpc3RHZXR0ZXJTZXR0ZXJzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAGc2NhbGRicQB+ALNzcQB+AKBxAH4Ao3NxAH4ApHNxAH4Ap3VxAH4AqgAAAANzcQB+AKxxAH4Ar3NxAH4ArHEAfgCxcQB+ALNzcQB+AKBxAH4AtXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKxxAH4AunEAfgCzdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2NhbGRic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbPpnxiXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADEvaG9tZS9rYWlxdWUvd2FyL3NjYWxkYi90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU9JRQtOYokTAYxIvTvsFJtBi8zy0=
scaldb.CoreString -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwWd0q6QAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAwc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwk2VSkHQABm5vdGlmeXNxAH4ADCSJo+d0AAdzZXRMaXN0c3EAfgAMQXiIpnQABHdhaXRzcQB+AAzcmltWdAANJGFzSW5zdGFuY2VPZnNxAH4ADNhv/Up0AAxTdHJpbmdWYWx1ZXNzcQB+AAy3P/FQdAAKU3RyaW5nS2V5c3NxAH4ADAQj/mV0AApDb3JlU3RyaW5nc3EAfgAMBZOSW3QABmVxdWFsc3NxAH4ADDBB0tR0AAlzZXRTdHJpbmdzcQB+AAyqS+YVdAATZ2V0U3RyaW5nJGRlZmF1bHQkMnNxAH4ADH/o1dp0AAxhc0luc3RhbmNlT2ZzcQB+AAzbmFypdAAQZ2V0SW50JGRlZmF1bHQkMnNxAH4ADKGegpV0AAlnZXRTdHJpbmdzcQB+AAxcuCDxdAAMc3luY2hyb25pemVkc3EAfgAMvZbtV3QAEmdldEFycmF5JGRlZmF1bHQkMnNxAH4ADJ2z1Bl0AAhzZXRBcnJheXNxAH4ADMhWWqV0AA0kaXNJbnN0YW5jZU9mc3EAfgAMD++Nf3QAC0FycmF5VmFsdWVzc3EAfgAMgiiJtnQAB0NvcmVJbnRzcQB+AAwcmzxwdAAJbm90aWZ5QWxsc3EAfgAMFNNGsnQABnNldEludHNxAH4ADL6yS2N0AAxpc0luc3RhbmNlT2ZzcQB+AAxhMWYjdAAJSW50VmFsdWVzc3EAfgAMueYDU3QACENvcmVMaXN0c3EAfgAMl8RL1HQACGdldEFycmF5c3EAfgAMolBri3QABjxpbml0PnNxAH4ADEOAr5B0AAI9PXNxAH4ADMHUQ0J0AAVjbG9uZXNxAH4ADAICVtJ0AApMaXN0VmFsdWVzc3EAfgAM1OP0TXQACUNvcmVBcnJheXNxAH4ADA8uByd0AAZnZXRJbnRzcQB+AAzyziKgdAAHZ2V0TGlzdHNxAH4ADITuK3Z0ABRDb3JlTGlzdEdldHRlclNldHRlcnNxAH4ADKYHp9N0AAdJbnRLZXlzc3EAfgAM8lgf4HQACHRvU3RyaW5nc3EAfgAMmvtipnQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ADO0C5R90ABFnZXRMaXN0JGRlZmF1bHQkMnNxAH4ADLSnCTF0AAIhPXNxAH4ADFCUcl50AAhnZXRDbGFzc3NxAH4ADC/Updh0AAJuZXNxAH4ADLO3IoN0AAlBcnJheUtleXNzcQB+AAztvl1DdAAWQ29yZVN0cmluZ0dldHRlclNldHRlcnNxAH4ADEgGd8x0AAJlcXNxAH4ADFsiqdB0ABNDb3JlSW50R2V0dGVyU2V0dGVyc3EAfgAM2EeqqXQAAiMjc3EAfgAMAT7763QACGZpbmFsaXplc3EAfgAMoZEDXnQACGhhc2hDb2Rlc3EAfgAM4yMZmnQACExpc3RLZXlzc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAACHNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Ad3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAXQAHXNjYWxkYi5Db3JlU3RyaW5nR2V0dGVyU2V0dGVydXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAFVHJhaXR1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AI9zcgAT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fgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAATQ29yZUludEdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAQc2NhbGRiLkNvcmVBcnJheXVxAH4AhwAAAABxAH4BDnVxAH4AjQAAAABzcQB+AI9xAH4AlXNxAH4Aj3NxAH4Al3NxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AHIAAAAAc3EAfgCPdXEAfgCeAAAAA3NxAH4AoHQAFUNvcmVBcnJheUdldHRlclNldHRlcnNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKx0AAZzY2FsZGJxAH4As3NxAH4AoHEAfgCjc3EAfgCkc3EAfgCndXEAfgCqAAAAA3NxAH4ArHEAfgCvc3EAfgCscQB+ALFxAH4As3NxAH4AoHEAfgC1c3EAfgCkc3EAfgCndXEAfgCqAAAAAnNxAH4ArHEAfgC6cQB+ALNzcQB+AHRxAH4AgXVxAH4AggAAAABzcQB+AIQAdAAPc2NhbGRiLkNvcmVMaXN0dXEAfgCHAAAAAHEAfgEOdXEAfgCNAAAAAHNxAH4Aj3EAfgCVc3EAfgCPc3EAfgCXc3EAfgCPdXEAfgByAAAAAHNxAH4Aj3VxAH4AcgAAAABzcQB+AI91cQB+AJ4AAAADc3EAfgCgdAAUQ29yZUxpc3RHZXR0ZXJTZXR0ZXJzcQB+AKRzcQB+AKd1cQB+AKoAAAACc3EAfgCsdAAGc2NhbGRicQB+ALNzcQB+AKBxAH4Ao3NxAH4ApHNxAH4Ap3VxAH4AqgAAAANzcQB+AKxxAH4Ar3NxAH4ArHEAfgCxcQB+ALNzcQB+AKBxAH4AtXNxAH4ApHNxAH4Ap3VxAH4AqgAAAAJzcQB+AKxxAH4AunEAfgCzdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAGc2NhbGRic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbPpnxiXVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADEvaG9tZS9rYWlxdWUvd2FyL3NjYWxkYi90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAU9JRQtOYokTAYxIvTvsFJtBi8zy0=
source infos:
1 items
/home/kaique/war/scaldb/src/test/scala/scaldb/CoreSpec.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWz6aBJV1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQANi9ob21lL2thaXF1ZS93YXIvc2NhbGRiL3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
